package es.Estudium.Tema7;

import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Label;
import java.awt.Menu;
import java.awt.MenuBar;
import java.awt.MenuItem;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;

public class MenuPrincipal implements WindowListener, ActionListener  {

	Frame ventana= new Frame ("Menú Principal");
	MenuBar barraMenu= new MenuBar();
	Menu mnuClientes= new Menu ("Clientes");//Articulos  CRUD
	MenuItem mniAltaCliente= new MenuItem("Nuevo Cliente");
	MenuItem mniConsultaClientes= new MenuItem("Listado de clientes");
	MenuItem mniBajaCliente= new MenuItem("Eliminar Cliente");
	MenuItem mniModificacionCliente= new MenuItem("Modificar cliente");

	Menu mnuRepartidores= new Menu("Repartidores"); //Clientes   
	MenuItem mniAltaRepartidor= new MenuItem("Nuevo Repartidor");
	MenuItem mniConsultaRepartidores= new MenuItem("Listado de Repartidores");
	MenuItem mniBajaRepartidor= new MenuItem("Eliminar Repartidor");
	MenuItem mniModificacionRepartidor= new MenuItem("Modificar Repartidor");

	Menu mnuVehiculos= new Menu("Vehiculos");//Facturas
	MenuItem mniAltaVehiculo= new MenuItem("Nuevo vehículo ");
	MenuItem mniConsultaVehiculos= new MenuItem("Listado de vehículos ");
	MenuItem mniBajaVehiculo= new MenuItem("Eliminar vehiculo");
	MenuItem mniModificacionVehiculo= new MenuItem("Modificar vehículo");

	Menu mnuCompranEntregan= new Menu("Compra-entrega"); //Clientes   
	MenuItem mniAltaCompranEntregan= new MenuItem("Nueva compra entrega");
	MenuItem mniConsultaCompranEntregan= new MenuItem("Listado de compra y entrega");
	MenuItem mniBajaCompranEntregan= new MenuItem("Eliminar compra entregan");
	MenuItem mniModificacionCompranEntregan= new MenuItem("Modificacion Compra entregan");

	Menu mnuAyuda= new Menu("Ayuda");
	MenuItem mniAyuda= new MenuItem("Ayuda");

	int tipoUsuario;
	Label lblUsuario= new Label("");//Usuario


	public MenuPrincipal(int tipoUsuario) 
	{
		this.tipoUsuario= tipoUsuario;
		//Listener
		ventana.addWindowListener(this);
		mniConsultaClientes.addActionListener(this);
		mniAltaCliente.addActionListener(this);
		mniBajaCliente.addActionListener(this);
		mniConsultaRepartidores.addActionListener(this);
		mniAltaRepartidor.addActionListener(this);
		mniModificacionRepartidor.addActionListener(this);
		mniAltaCompranEntregan.addActionListener(this);
		mniConsultaCompranEntregan.addActionListener(this);
		mniBajaCompranEntregan.addActionListener(this);
		mniModificacionCompranEntregan.addActionListener(this);
		mniAltaVehiculo.addActionListener(this);
		mniModificacionCliente.addActionListener(this);
		mniBajaRepartidor.addActionListener(this);
		mniConsultaVehiculos.addActionListener(this);
		mniBajaVehiculo.addActionListener(this);
		mniModificacionVehiculo.addActionListener(this);
		mniAyuda.addActionListener(this);

		//Pantalla
		ventana.setSize(350, 150); // Ancho y altura
		ventana.setResizable(true);// no permitir redimensionar

		ventana.setLayout(new FlowLayout());// fijar la distribución

		mnuClientes.add(mniAltaCliente);
		mnuClientes.add(mniConsultaClientes);
		mnuRepartidores.add(mniAltaRepartidor);
		mnuRepartidores.add(mniConsultaRepartidores);
		mnuVehiculos.add(mniAltaVehiculo);
		mnuVehiculos.add(mniConsultaVehiculos);
		mnuCompranEntregan.add(mniAltaCompranEntregan);
		mnuCompranEntregan.add(mniConsultaCompranEntregan);
		
		mnuAyuda.add(mniAyuda);
		barraMenu.add(mnuAyuda);



		if(tipoUsuario==1)
		{		
			mnuClientes.add(mniBajaCliente);
			mnuClientes.add(mniModificacionCliente);
		}
		barraMenu.add(mnuClientes);





		if(tipoUsuario==1)
		{		
			mnuRepartidores.add(mniBajaRepartidor);
			mnuRepartidores.add(mniModificacionRepartidor);
		}

		barraMenu.add(mnuRepartidores);




		if(tipoUsuario==1)
		{		
			mnuVehiculos.add(mniBajaVehiculo);
			mnuVehiculos.add(mniModificacionVehiculo);
		}


		barraMenu.add(mnuVehiculos);

		if(tipoUsuario==1)
		{		
			mnuCompranEntregan.add(mniBajaCompranEntregan);
			mnuCompranEntregan.add(mniModificacionCompranEntregan);
		}

		barraMenu.add(mnuCompranEntregan);

		ventana.add(lblUsuario);
		ventana.setMenuBar(barraMenu);

		ventana.setLocationRelativeTo(null);//fijar que la ventana salga
		ventana.setVisible(true);//mostrar la ventana
	}


	@Override
	public void actionPerformed(ActionEvent evento) {

		if(evento.getSource().equals(mniConsultaClientes))
		{
			new ConsultaClientes(tipoUsuario);
		}

		else if(evento.getSource().equals(mniAltaCliente))
		{
			new AltaCliente(tipoUsuario);
		}

		else if(evento.getSource().equals(mniBajaCliente))
		{
			new BajaCliente(tipoUsuario);
		}

		else if(evento.getSource().equals(mniConsultaRepartidores))
		{
			new ConsultaRepartidores(tipoUsuario);
		}

		else if(evento.getSource().equals(mniAltaRepartidor))
		{
			new AltaRepartidor(tipoUsuario);
		}

		else if(evento.getSource().equals(mniModificacionRepartidor))
		{
			new ModificacionRepartidor(tipoUsuario);
		}

		else if(evento.getSource().equals(mniAltaCompranEntregan))
		{
			new AltaCompranEntregan(tipoUsuario);
		}

		else if(evento.getSource().equals(mniConsultaCompranEntregan))
		{
			new ConsultaCompraEntrega(tipoUsuario);
		}

		else if(evento.getSource().equals(mniBajaCompranEntregan))
		{
			new BajaCompranEntregan(tipoUsuario);
		}
		else if(evento.getSource().equals(mniAltaVehiculo))
		{
			new AltaVehiculo(tipoUsuario);
		}
		else if(evento.getSource().equals(mniModificacionCliente))
		{
			new ModificacionCliente(tipoUsuario);
		}
		else if(evento.getSource().equals(mniBajaRepartidor))
		{
			new BajaRepartidor(tipoUsuario);
		}

		else if(evento.getSource().equals(mniConsultaVehiculos))
		{
			new ConsultaVehiculo(tipoUsuario);
		}

		else if(evento.getSource().equals(mniBajaVehiculo))
		{
			new BajaVehiculo(tipoUsuario);
		}

		else if(evento.getSource().equals(mniModificacionVehiculo))
		{
			new ModificacionVehiculo(tipoUsuario);
		}
		else if(evento.getSource().equals(mniModificacionCompranEntregan))
		{
			new ModificacionComprEntrega(tipoUsuario);
		}
		else if (evento.getSource().equals(mniAyuda))
		{


			{
				try
				{
					Runtime.getRuntime().exec("hh.exe Ayuda.chm");
				}
				catch (IOException e)
				{
					e.printStackTrace();
				}
			}
		}
	}




@Override
public void windowOpened(WindowEvent e) {
	// TODO Auto-generated method stub

}


@Override
public void windowClosing(WindowEvent we) {

	BaseDeDatos bd= new BaseDeDatos();
	bd.guardarLog(tipoUsuario, "Logout");
	System.exit(0);



}


@Override
public void windowClosed(WindowEvent e) {
	// TODO Auto-generated method stub

}


@Override
public void windowIconified(WindowEvent e) {
	// TODO Auto-generated method stub

}


@Override
public void windowDeiconified(WindowEvent e) {
	// TODO Auto-generated method stub

}


@Override
public void windowActivated(WindowEvent e) {
	// TODO Auto-generated method stub

}


@Override
public void windowDeactivated(WindowEvent e) {
	// TODO Auto-generated method stub

}
}
